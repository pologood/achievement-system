<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

    <bean id="consumerDataSource" class="com.alibaba.druid.pool.DruidDataSource" lazy-init="false" init-method="init"
          destroy-method="close">
        <property name="driverClassName">
            <value>${jdbc.consumer.driverClass}</value>
        </property>
        <property name="url">
            <value>${jdbc.consumer.url}</value>
        </property>
        <property name="username">
            <value>${jdbc.consumer.username}</value>
        </property>
        <property name="password">
            <value>${jdbc.consumer.password}</value>
        </property>
        <property name="maxActive">
            <value>${jdbc.consumer.maxActive}</value>
        </property>
        <property name="maxWait">
            <value>${jdbc.consumer.maxWait}</value>
        </property>
        <property name="defaultAutoCommit">
            <value>${jdbc.consumer.defaultAutoCommit}</value>
        </property>
        <property name="initialSize" value="30"/>
        <property name="minIdle" value="30"/>
        <!-- Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 连接保持空闲而不被驱逐的最长时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <!-- 申请连接的时候,如果检测到连接空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效 -->
        <property name="testWhileIdle" value="true"/>
        <!-- 申请连接时执行validationQuery检测连接是否有效,打开会影响性能 -->
        <property name="testOnBorrow" value="false"/>
        <!-- 归还连接时执行validationQuery检测连接是否有效,打开会影响性能 -->
        <property name="testOnReturn" value="false"/>
        <property name="validationQuery" value="SELECT 1"/>
        <!-- mysql需要关闭pscache -->
        <property name="poolPreparedStatements" value="false"/>
        <property name="connectionInitSqls" value="set names utf8mb4"/>
    </bean>

    <bean id="consumerSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="consumerDataSource"/>
        <property name="typeAliasesPackage" value="com.dfire.soa.oauth.internal.bo.ThirdMapping"/>
        <property name="mapperLocations" value="classpath:/mapper/*.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.dfire.soa.oauth.internal.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="consumerSqlSessionFactory"/>
    </bean>

</beans>